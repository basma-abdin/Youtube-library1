{"ast":null,"code":"var _jsxFileName = \"/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/pages/library.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { get_library } from '../services/http-requests';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    backgroundColor: 'red'\n  },\n  gridList: {\n    height: '690px',\n    backgroundColor: 'blue'\n  }\n}));\nexport const LibraryPage = ({\n  initial = \"\"\n}) => {\n  _s();\n\n  const [videos, setVideos] = useState([{\n    title: \"string\",\n    id: \"strindg\",\n    name: \"string\"\n  }, {\n    title: \"string\",\n    id: \"strieng\",\n    name: \"string\"\n  }, {\n    title: \"string\",\n    id: \"strizng\",\n    name: \"string\"\n  }]);\n  const [vo, setVo] = useState(\"\");\n  const classes = useStyles();\n  useEffect(() => {\n    get_library().then(response => {\n      let data = response.data;\n      console.log(data['data']); // setVideos(data['data'])\n\n      console.log(videos);\n      setVo(\"eeeoooooooooo\");\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []); // useEffect(() => {\n  //   // Error: Argument of type '21' is not assignable to parameter of type 'SetStateAction<string>'.ts(2345)\n  //   // setName(21)\n  //   // // Error: Argument of type 'true' is not assignable to parameter of type 'SetStateAction<number>'.ts(2345)\n  //   // setAge(true)\n  //   // Error: Argument of type '\"Gabriel Rufino\"' is not assignable to parameter of type 'SetStateAction<boolean>'.\n  //   setVo('Gabriel Rufino')\n  //   console.log(vo);\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: boxStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"vvvvvv\", vo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: containers,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              style: videosContainer,\n              xs: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(GridList, {\n                cellHeight: 160,\n                className: classes.gridList,\n                cols: 1,\n                children: videos.map(v => /*#__PURE__*/_jsxDEV(GridListTile, {\n                  cols: 1,\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"v.title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 17\n                  }, this)\n                }, v.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: embededVideoContainer,\n              xs: 12,\n              md: 8,\n              children: \"xs=6 md=4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(LibraryPage, \"aKRmpQEv2wFmIc65zLIvnGnpqWc=\", false, function () {\n  return [useStyles];\n});\n\n_c = LibraryPage;\nconst containerStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst boxStyle = {\n  justifyContent: 'start',\n  marginTop: '50px',\n  width: '80%',\n  height: '800px',\n  paddingTop: '60px',\n  borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n};\nconst containers = {\n  // display: 'flex',\n  // flexDirection: 'row',\n  // flexFlow: 'row',\n  height: '690px',\n  backgroundColor: 'beige'\n};\nconst videosContainer = {// backgroundColor: 'blue',\n};\nconst embededVideoContainer = {\n  backgroundColor: 'red'\n};\nconst gridList = {\n  flexWrap: 'nowrap',\n  // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  transform: 'translateZ(0)'\n};\nconst root = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LibraryPage\");","map":{"version":3,"sources":["/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/pages/library.tsx"],"names":["React","useEffect","useState","get_library","Container","Row","Col","GridList","GridListTile","createStyles","makeStyles","useStyles","theme","root","display","flexWrap","justifyContent","backgroundColor","gridList","height","LibraryPage","initial","videos","setVideos","title","id","name","vo","setVo","classes","then","response","data","console","log","catch","e","containerStyle","boxStyle","containers","videosContainer","map","v","embededVideoContainer","marginTop","width","paddingTop","borderColor","borderWidth","borderStyle","transform","overflow"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport CSS from 'csstype';\nimport {get_library} from '../services/http-requests'\nimport { Container , Row, Col } from 'react-bootstrap';\nimport { Hidden } from '@material-ui/core';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      backgroundColor: 'red',\n    },\n    gridList: {\n      height: '690px',\n      backgroundColor: 'blue'\n    },\n  }),\n);\n\ntype Video = {\n  title: string,\n  id: string,\n  name: string\n}\n\nexport const LibraryPage: FunctionComponent<{ initial?: string }> = ({ initial = \"\" })=> {\n\n  const [videos, setVideos] = useState<Array<Video>>([\n    {title: \"string\",id: \"strindg\",name: \"string\"},\n    {title: \"string\",id: \"strieng\",name: \"string\"},\n    {title: \"string\",id: \"strizng\",name: \"string\"}\n  ]);\n  const [vo, setVo] = useState<string>(\"\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    get_library()\n    .then(response => {\n      let data = response.data;\n      console.log(data['data']);\n      // setVideos(data['data'])\n      console.log(videos);\n      setVo(\"eeeoooooooooo\")\n\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n  },[]);\n  // useEffect(() => {\n  //   // Error: Argument of type '21' is not assignable to parameter of type 'SetStateAction<string>'.ts(2345)\n  //   // setName(21)\n  //   // // Error: Argument of type 'true' is not assignable to parameter of type 'SetStateAction<number>'.ts(2345)\n  //   // setAge(true)\n  //   // Error: Argument of type '\"Gabriel Rufino\"' is not assignable to parameter of type 'SetStateAction<boolean>'.\n  //   setVo('Gabriel Rufino')\n  //   console.log(vo);\n\n  // }, [])\n\n\n\n  return <>\n  <div style={containerStyle}>\n   <div style={boxStyle}>\n    <h1>vvvvvv{vo}</h1>\n     {/* <div style={containers} >\n      <div style={videosContainer}>\n        dd\n      </div>\n      <div style={embededVideoContainer}>\n        dd\n      </div>\n\n     </div> */}\n     <Container>\n     <Row style={containers}>\n    <Col style={videosContainer} xs={6} md={4}>\n\n  <GridList cellHeight={160} className={classes.gridList} cols={1}>\n        {videos.map((v) => (\n          <GridListTile key={v.id} cols={ 1}>\n                <h1>v.title</h1>\n          </GridListTile>\n        ))}\n      </GridList>\n    </Col>\n    <Col style={embededVideoContainer} xs={12} md={8}>\n      xs=6 md=4\n    </Col>\n  </Row>\n\n</Container>\n\n    </div>\n  </div>\n  </>\n}\n\n\n\nconst containerStyle: CSS.Properties = {\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nconst boxStyle: CSS.Properties = {\n  justifyContent: 'start',\n  marginTop: '50px',\n  width: '80%',\n  height: '800px',\n  paddingTop: '60px',\n  borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n};\nconst containers: CSS.Properties = {\n  // display: 'flex',\n  // flexDirection: 'row',\n  // flexFlow: 'row',\n  height: '690px',\n  backgroundColor: 'beige'\n\n};\nconst videosContainer: CSS.Properties = {\n  // backgroundColor: 'blue',\n\n};\nconst embededVideoContainer: CSS.Properties = {\n  backgroundColor: 'red'\n};\nconst gridList:CSS.Properties ={\n  flexWrap: 'nowrap',\n  // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  transform: 'translateZ(0)',\n}\nconst root: CSS.Properties={\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden',\n}\n"]},"metadata":{},"sourceType":"module"}