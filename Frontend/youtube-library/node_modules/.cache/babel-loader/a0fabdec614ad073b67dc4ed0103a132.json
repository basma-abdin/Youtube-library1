{"ast":null,"code":"var _jsxFileName = \"/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/pages/library.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { get_library } from '../services/http-requests';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Video } from '../components/video';\nimport { VideoPlayer } from '../components/videoplayer';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    backgroundColor: 'red'\n  },\n  gridList: {\n    height: '680px',\n    backgroundColor: 'beige',\n    transform: 'translateZ(0)'\n  },\n  gridListTile: {\n    backgroundColor: 'bisque',\n    borderColor: 'black',\n    borderWidth: '2px',\n    borderStyle: 'solid'\n  }\n}));\nexport const LibraryPage = ({\n  initial = \"\"\n}) => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [videoToPlay, setVideoToPlay] = useState({\n    title: \"\",\n    id: \"\"\n  });\n  const [displaySearch, setDisplaySearch] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    get_library().then(response => {\n      let data = response.data;\n      setVideos(data['data']);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n\n  function startPlay(v) {\n    console.log(v.id);\n    setVideoToPlay(v);\n  }\n\n  function startSearch() {\n    console.log(\"inside search\");\n    setDisplaySearch(true);\n  }\n\n  function stopSearch() {\n    console.log(\"inside search\");\n    setDisplaySearch(false);\n  }\n\n  function controlButton() {\n    if (displaySearch) return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"default\" // className={classes.button}\n      ,\n      startIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }, this),\n      onClick: startSearch,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);else return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"default\" // className={classes.button}\n      ,\n      startIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 22\n      }, this),\n      onClick: stopSearch,\n      children: \"Stop searching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: boxStyle,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: containers,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              style: videosContainer,\n              xs: 6,\n              md: 4,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Your library\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"default\" // className={classes.button}\n                ,\n                startIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 28\n                }, this),\n                onClick: startSearch,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(GridList, {\n                cellHeight: 140,\n                className: classes.gridList,\n                cols: 1,\n                children: videos.map(v => /*#__PURE__*/_jsxDEV(GridListTile, {\n                  className: classes.gridListTile,\n                  cols: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Video, {\n                    title: v.title,\n                    id: v.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n                    title: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"default\" // className={classes.button}\n                      ,\n                      startIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 36\n                      }, this),\n                      onClick: () => startPlay(v),\n                      children: \"Play\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, this),\n                    actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": `info about `,\n                      children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)]\n                }, v.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: embededVideoContainer,\n              xs: 12,\n              md: 8,\n              children: !displaySearch ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: embededVideo,\n                children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n                  title: videoToPlay.title,\n                  id: videoToPlay.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 15\n              }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"ddd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(LibraryPage, \"vGXbpZym6DYxi4ZsQcyQoQGL+hE=\", false, function () {\n  return [useStyles];\n});\n\n_c = LibraryPage;\nconst containerStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst boxStyle = {\n  justifyContent: 'start',\n  marginTop: '50px',\n  width: '80%',\n  height: '800px',\n  paddingTop: '60px',\n  borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n};\nconst containers = {\n  // height: '690px',\n  flex: 'flex-start',\n  backgroundColor: 'beige'\n};\nconst videosContainer = {// backgroundColor: 'blue',\n};\nconst embededVideoContainer = {\n  backgroundColor: 'red',\n  justifyContent: 'center',\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst embededVideo = {\n  backgroundColor: 'blue',\n  borderWidth: '1px',\n  width: '100%',\n  height: '70%'\n};\nconst gridList = {\n  flexWrap: 'nowrap',\n  // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  transform: 'translateZ(0)'\n};\nconst root = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LibraryPage\");","map":{"version":3,"sources":["/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/pages/library.tsx"],"names":["React","useEffect","useState","get_library","Container","Row","Col","GridList","GridListTile","createStyles","makeStyles","Video","VideoPlayer","GridListTileBar","Button","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","backgroundColor","gridList","height","transform","gridListTile","borderColor","borderWidth","borderStyle","LibraryPage","initial","videos","setVideos","videoToPlay","setVideoToPlay","title","id","displaySearch","setDisplaySearch","classes","then","response","data","catch","e","console","log","startPlay","v","startSearch","stopSearch","controlButton","containerStyle","boxStyle","containers","videosContainer","map","embededVideoContainer","embededVideo","justifyContent","marginTop","width","paddingTop","flex","alignItems","flexDirection","overflow"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport CSS from 'csstype';\nimport {get_library} from '../services/http-requests'\nimport { Container , Row, Col } from 'react-bootstrap';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport {Video} from '../components/video'\nimport {VideoPlayer} from '../components/videoplayer'\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      backgroundColor: 'red',\n    },\n    gridList: {\n      height: '680px',\n      backgroundColor: 'beige',\n      transform: 'translateZ(0)',\n    },\n    gridListTile: {\n      backgroundColor: 'bisque',\n      borderColor: 'black',\n      borderWidth: '2px',\n      borderStyle: 'solid'\n    },\n  }),\n);\n\nexport type Video = {\n  title: string,\n  id: string,\n}\n\nexport const LibraryPage: FunctionComponent<{ initial?: string }> = ({ initial = \"\" })=> {\n\n  const [videos, setVideos] = useState<Array<Video>>([]);\n\n  const [videoToPlay, setVideoToPlay] = useState<Video>({title:\"\", id:\"\"})\n  const [displaySearch, setDisplaySearch] = useState(false)\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    get_library()\n    .then(response => {\n      let data = response.data;\n      setVideos(data['data'])\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n  },[]);\n\n  function startPlay(v :Video){\n    console.log(v.id);\n    setVideoToPlay(v)\n  }\n  function startSearch(){\n    console.log(\"inside search\");\n    setDisplaySearch(true)\n  }\n  function stopSearch(){\n    console.log(\"inside search\");\n    setDisplaySearch(false)\n  }\n\n  function controlButton(){\n    if(displaySearch)\n      return (\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          // className={classes.button}\n          startIcon={<InfoIcon />}\n          onClick= {startSearch}\n          >Add\n        </Button>\n      )\n    else\n      return (\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          // className={classes.button}\n          startIcon={<InfoIcon />}\n          onClick= {stopSearch}\n        >Stop searching\n        </Button>\n      )\n  }\n\n  return <>\n  <div style={containerStyle}>\n    <div style={boxStyle}>\n      <Container>\n        <Row style={containers}>\n          <Col style={videosContainer} xs={6} md={4}>\n            <h2>Your library</h2>\n            <Button\n                variant=\"contained\"\n                color=\"default\"\n                // className={classes.button}\n                startIcon={<InfoIcon />}\n                onClick= {startSearch}\n            >Add\n            </Button>\n            <GridList cellHeight={140} className={classes.gridList} cols={1}>\n              {videos.map((v) => (\n                <GridListTile className={classes.gridListTile} key={v.id} cols={1}>\n                  <Video title={v.title} id={v.id} />\n                    <GridListTileBar\n                    title={\n                      <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        // className={classes.button}\n                        startIcon={<InfoIcon />}\n                        onClick= {()=>startPlay(v)}\n                      >\n                        Play\n                      </Button>\n                    }\n                    actionIcon={\n                      <IconButton aria-label={`info about `} >\n                        <InfoIcon />\n                      </IconButton>\n                    }\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </Col>\n          <Col style={embededVideoContainer} xs={12} md={8}>\n            {!displaySearch?\n              <div style={embededVideo}>\n                <VideoPlayer title={videoToPlay.title} id={videoToPlay.id}/>\n              </div>\n            :\n            <h1>ddd</h1>\n\n            }\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  </div>\n  </>\n}\n\n\n\nconst containerStyle: CSS.Properties = {\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nconst boxStyle: CSS.Properties = {\n  justifyContent: 'start',\n  marginTop: '50px',\n  width: '80%',\n  height: '800px',\n  paddingTop: '60px',\n  borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n};\nconst containers: CSS.Properties = {\n  // height: '690px',\n  flex: 'flex-start',\n  backgroundColor: 'beige'\n\n};\nconst videosContainer: CSS.Properties = {\n  // backgroundColor: 'blue',\n\n};\nconst embededVideoContainer: CSS.Properties = {\n  backgroundColor: 'red',\n  justifyContent: 'center',\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst embededVideo: CSS.Properties = {\n  backgroundColor: 'blue',\n  borderWidth: '1px',\n  width: '100%',\n  height: '70%',\n\n};\nconst gridList:CSS.Properties ={\n  flexWrap: 'nowrap',\n  // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  transform: 'translateZ(0)',\n}\nconst root: CSS.Properties={\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden',\n}\n"]},"metadata":{},"sourceType":"module"}