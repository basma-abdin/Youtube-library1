{"ast":null,"code":"var _jsxFileName = \"/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/components/suggestion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { fetch_suggestions } from '../services/http-requests';\nimport { Search } from '../components/search';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: 'blue'\n  },\n  gridList: {\n    height: '550px'\n  },\n  title: {\n    color: 'white'\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\nexport const Suggestion = ({\n  addVideo\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [searchedObj, setSearchedObj] = useState({\n    title: \"\",\n    n: 0\n  });\n  const [videos, setVideos] = useState([]);\n\n  function startSearch(title, n) {\n    console.log(\"from start search\");\n    get_suggestions(title, n);\n  }\n\n  function get_suggestions(title, n) {\n    fetch_suggestions(title, n).then(response => {\n      let data = response.data;\n      console.log(data.items);\n      setVideos(data.items);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        setSearchedObj: setSearchedObj,\n        startSearch: startSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(GridList, {\n          className: classes.gridList,\n          cols: 1,\n          children: videos.map(v => /*#__PURE__*/_jsxDEV(GridListTile, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: v.snippet.thumbnails.default.url,\n              alt: v.snippet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n              title: v.snippet.title,\n              classes: {\n                root: classes.titleBar,\n                title: classes.title\n              },\n              actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": `star ${v.snippet.title.title}`,\n                onClick: () => addVideo(v.snippet.title.title, v.id.videoId),\n                children: /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n                  className: classes.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)]\n          }, v.id.videoId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(Suggestion, \"hejpNRCX9uNBxwMSjS4dSMMBAYk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Suggestion;\nconst containerStyle = {// display: 'flex',\n  // justifyContent: 'center',\n};\nconst boxStyle = {\n  backgroundColor: 'bisque'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Suggestion\");","map":{"version":3,"sources":["/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/components/suggestion.tsx"],"names":["React","useState","makeStyles","createStyles","fetch_suggestions","Search","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","gridList","height","title","color","titleBar","background","Suggestion","addVideo","classes","searchedObj","setSearchedObj","n","videos","setVideos","startSearch","console","log","get_suggestions","then","response","data","items","catch","e","containerStyle","map","v","snippet","thumbnails","default","url","id","videoId","boxStyle"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport CSS from 'csstype';\nimport {fetch_suggestions} from '../services/http-requests'\nimport {Search} from '../components/search'\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport type { SearchObj} from '../types'\nimport { blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: 'blue',\n  },\n  gridList: {\n    height: '550px',\n\n  },\n  title: {\n    color: 'white',\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n\n  },\n}),\n);\n\n\nexport const Suggestion: FunctionComponent<{addVideo: Function}>= ({addVideo})=> {\n  const classes = useStyles();\n  const [searchedObj, setSearchedObj] = useState<SearchObj>({title:\"\", n:0})\n  const [videos, setVideos] = useState<Array<any>>([])\n\n  function startSearch(title:string,n:number) {\n    console.log(\"from start search\");\n    get_suggestions(title,n)\n  }\n\n  function get_suggestions(title:string,n:number){\n    fetch_suggestions(title,n)\n    .then(response => {\n      let data = response.data;\n      console.log(data.items);\n      setVideos(data.items)\n\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n  }\n\n  return <>\n  <div style={containerStyle}>\n  <Search setSearchedObj={setSearchedObj} startSearch={startSearch} />\n  <div className={classes.root}>\n      <GridList className={classes.gridList} cols={1}>\n        {videos.map((v) => (\n          <GridListTile key={v.id.videoId}>\n            <img src={v.snippet.thumbnails.default.url} alt={v.snippet.title} />\n            <GridListTileBar\n              title={v.snippet.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${v.snippet.title.title}`}\n                   onClick={()=> addVideo(v.snippet.title.title, v.id.videoId)}\n                >\n                  <StarBorderIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  </div>\n  </>\n}\n\n\n\nconst containerStyle: CSS.Properties = {\n  // display: 'flex',\n  // justifyContent: 'center',\n};\n\nconst boxStyle: CSS.Properties = {\n  backgroundColor: 'bisque'\n};"]},"metadata":{},"sourceType":"module"}