{"ast":null,"code":"var _jsxFileName = \"/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/pages/library.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { get_library } from '../services/http-requests';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Video } from '../components/video';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    backgroundColor: 'red'\n  },\n  gridList: {\n    height: '680px',\n    backgroundColor: 'beige',\n    transform: 'translateZ(0)'\n  },\n  gridListTile: {\n    margin: '1px',\n    backgroundColor: 'bisque',\n    borderColor: 'black',\n    borderWidth: '2px',\n    borderStyle: 'solid'\n  }\n}));\nexport const LibraryPage = ({\n  initial = \"\"\n}) => {\n  _s();\n\n  const [videos, setVideos] = useState([// {title: \"strdding\",id: \"strindg\",name: \"string\"},\n    // {title: \"string\",id: \"strieng\",name: \"string\"},\n    // {title: \"string\",id: \"stdrieng\",name: \"string\"},\n    // {title: \"string\",id: \"stdrienlg\",name: \"string\"},\n    // {title: \"string\",id: \"strideng\",name: \"string\"},\n    // {title: \"stridng\",id: \"sstrideng\",name: \"string\"},\n    // {title: \"string\",id: \"ssdtrideng\",name: \"string\"},\n    // {title: \"stridng\",id: \"sdstrideng\",name: \"string\"},\n    // {title: \"string\",id: \"strizng\",name: \"string\"}\n  ]);\n  const [vo, setVo] = useState(\"\");\n  const classes = useStyles();\n  useEffect(() => {\n    get_library().then(response => {\n      let data = response.data;\n      console.log(data['data']);\n      setVideos(data['data']);\n      console.log(videos);\n      setVo(\"eeeoooooooooo\");\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: boxStyle,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: containers,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              style: videosContainer,\n              xs: 6,\n              md: 4,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Your library\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: loginSubmit,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": `info about `,\n                  children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(GridList, {\n                cellHeight: 140,\n                spacing: 1,\n                className: classes.gridList,\n                cols: 1,\n                children: videos.map(v => /*#__PURE__*/_jsxDEV(GridListTile, {\n                  className: classes.gridListTile,\n                  cols: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Video, {\n                    title: v.title,\n                    id: v.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n                    title: \"ee\",\n                    actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": `info about `,\n                      children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 19\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 19\n                  }, this)]\n                }, v.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: embededVideoContainer,\n              xs: 12,\n              md: 8,\n              children: \"xs=6 md=4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(LibraryPage, \"sk/Vn1Da4rh8F+/lks+y7dZJ12U=\", false, function () {\n  return [useStyles];\n});\n\n_c = LibraryPage;\nconst containerStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst boxStyle = {\n  justifyContent: 'start',\n  marginTop: '50px',\n  width: '80%',\n  height: '800px',\n  paddingTop: '60px',\n  borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n};\nconst containers = {\n  height: '690px',\n  backgroundColor: 'beige'\n};\nconst videosContainer = {// backgroundColor: 'blue',\n};\nconst embededVideoContainer = {\n  backgroundColor: 'red'\n};\nconst gridList = {\n  flexWrap: 'nowrap',\n  // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  transform: 'translateZ(0)'\n};\nconst root = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LibraryPage\");","map":{"version":3,"sources":["/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/pages/library.tsx"],"names":["React","useEffect","useState","get_library","Container","Row","Col","GridList","GridListTile","createStyles","makeStyles","Video","GridListTileBar","Button","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","backgroundColor","gridList","height","transform","gridListTile","margin","borderColor","borderWidth","borderStyle","LibraryPage","initial","videos","setVideos","vo","setVo","classes","then","response","data","console","log","catch","e","containerStyle","boxStyle","containers","videosContainer","loginSubmit","map","v","title","id","embededVideoContainer","justifyContent","marginTop","width","paddingTop","overflow"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport CSS from 'csstype';\nimport {get_library} from '../services/http-requests'\nimport { Container , Row, Col } from 'react-bootstrap';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport {Video} from '../components/video'\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      backgroundColor: 'red',\n    },\n    gridList: {\n      height: '680px',\n      backgroundColor: 'beige',\n      transform: 'translateZ(0)',\n    },\n    gridListTile: {\n      margin: '1px',\n      backgroundColor: 'bisque',\n      borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n    },\n  }),\n);\n\ntype Video = {\n  title: string,\n  id: string,\n  name: string\n}\n\nexport const LibraryPage: FunctionComponent<{ initial?: string }> = ({ initial = \"\" })=> {\n\n  const [videos, setVideos] = useState<Array<Video>>([\n    // {title: \"strdding\",id: \"strindg\",name: \"string\"},\n    // {title: \"string\",id: \"strieng\",name: \"string\"},\n    // {title: \"string\",id: \"stdrieng\",name: \"string\"},\n    // {title: \"string\",id: \"stdrienlg\",name: \"string\"},\n    // {title: \"string\",id: \"strideng\",name: \"string\"},\n    // {title: \"stridng\",id: \"sstrideng\",name: \"string\"},\n    // {title: \"string\",id: \"ssdtrideng\",name: \"string\"},\n    // {title: \"stridng\",id: \"sdstrideng\",name: \"string\"},\n    // {title: \"string\",id: \"strizng\",name: \"string\"}\n  ]);\n  const [vo, setVo] = useState<string>(\"\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    get_library()\n    .then(response => {\n      let data = response.data;\n      console.log(data['data']);\n      setVideos(data['data'])\n      console.log(videos);\n      setVo(\"eeeoooooooooo\")\n\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n  },[]);\n\n  return <>\n  <div style={containerStyle}>\n    <div style={boxStyle}>\n      <Container>\n        <Row style={containers}>\n          <Col style={videosContainer} xs={6} md={4}>\n            <h2>Your library</h2>\n            <Button variant=\"contained\" color=\"primary\" onClick={loginSubmit}>\n                <IconButton aria-label={`info about `} >\n                  <InfoIcon />\n                </IconButton>\n            </Button>\n            <GridList cellHeight={140} spacing={1} className={classes.gridList} cols={1}>\n              {videos.map((v) => (\n                <GridListTile  className={classes.gridListTile} key={v.id} cols={1}>\n                  <Video title={v.title} id={v.id}/>\n                  <GridListTileBar\n              title=\"ee\"\n              actionIcon={\n                <IconButton aria-label={`info about `} >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n                </GridListTile>\n              ))}\n            </GridList>\n          </Col>\n          <Col style={embededVideoContainer} xs={12} md={8}>\n            xs=6 md=4\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  </div>\n  </>\n}\n\n\n\nconst containerStyle: CSS.Properties = {\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nconst boxStyle: CSS.Properties = {\n  justifyContent: 'start',\n  marginTop: '50px',\n  width: '80%',\n  height: '800px',\n  paddingTop: '60px',\n  borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n};\nconst containers: CSS.Properties = {\n  height: '690px',\n  backgroundColor: 'beige'\n\n};\nconst videosContainer: CSS.Properties = {\n  // backgroundColor: 'blue',\n\n};\nconst embededVideoContainer: CSS.Properties = {\n  backgroundColor: 'red'\n};\nconst gridList:CSS.Properties ={\n  flexWrap: 'nowrap',\n  // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  transform: 'translateZ(0)',\n}\nconst root: CSS.Properties={\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden',\n}\n"]},"metadata":{},"sourceType":"module"}