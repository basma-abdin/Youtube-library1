{"ast":null,"code":"var _jsxFileName = \"/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/pages/library.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { get_library } from '../services/http-requests';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Video } from '../components/video';\nimport { VideoPlayer } from '../components/videoplayer';\nimport { Suggestion } from '../components/suggestion';\nimport { Search } from '../components/search';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    backgroundColor: 'red'\n  },\n  gridList: {\n    height: '680px',\n    backgroundColor: 'beige',\n    transform: 'translateZ(0)'\n  },\n  gridListTile: {\n    backgroundColor: 'bisque',\n    borderColor: 'black',\n    borderWidth: '2px',\n    borderStyle: 'solid'\n  }\n}));\nexport const LibraryPage = ({\n  initial = \"\"\n}) => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [videoToPlay, setVideoToPlay] = useState({\n    title: \"\",\n    id: \"\"\n  });\n  const [displaySearch, setDisplaySearch] = useState(false);\n  const [searchedObj, setSearchedObj] = useState({\n    title: \"\",\n    n: 0\n  });\n  console.log(searchedObj);\n  const classes = useStyles();\n  useEffect(() => {\n    get_library().then(response => {\n      let data = response.data;\n      setVideos(data['data']);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n\n  function startPlay(v) {\n    setVideoToPlay(v);\n  }\n\n  function startSearch() {\n    setDisplaySearch(true);\n  }\n\n  function stopSearch() {\n    setDisplaySearch(false);\n  }\n\n  function controlButtons() {\n    if (!displaySearch) {\n      console.log(\"bbbbbbbbb\");\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\" // className={classes.button}\n        ,\n        startIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 22\n        }, this),\n        onClick: startSearch,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"default\" // className={classes.button}\n      ,\n      startIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 22\n      }, this),\n      onClick: stopSearch,\n      children: \"Stop searching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: boxStyle,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: containers,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              style: videosContainer,\n              xs: 6,\n              md: 4,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Your library\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }, this), controlButtons(), /*#__PURE__*/_jsxDEV(GridList, {\n                cellHeight: 140,\n                className: classes.gridList,\n                cols: 1,\n                children: videos.map(v => /*#__PURE__*/_jsxDEV(GridListTile, {\n                  className: classes.gridListTile,\n                  cols: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Video, {\n                    title: v.title,\n                    id: v.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n                    title: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"default\" // className={classes.button}\n                      ,\n                      startIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 36\n                      }, this),\n                      onClick: () => startPlay(v),\n                      children: \"Play\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 23\n                    }, this),\n                    actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": `info about `,\n                      children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this)]\n                }, v.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: embededVideoContainer,\n              xs: 12,\n              md: 8,\n              children: !displaySearch ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: embededVideo,\n                children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n                  title: videoToPlay.title,\n                  id: videoToPlay.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  setSearchedObj: setSearchedObj\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Suggestion, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(LibraryPage, \"FxReldmThMsuyzGrf3M59q/dL4A=\", false, function () {\n  return [useStyles];\n});\n\n_c = LibraryPage;\nconst containerStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst boxStyle = {\n  justifyContent: 'start',\n  marginTop: '50px',\n  width: '80%',\n  height: '800px',\n  paddingTop: '60px',\n  borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n};\nconst containers = {\n  // height: '690px',\n  flex: 'flex-start',\n  backgroundColor: 'beige'\n};\nconst videosContainer = {// backgroundColor: 'blue',\n};\nconst embededVideoContainer = {\n  backgroundColor: 'red',\n  // justifyContent: 'center',\n  // alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst embededVideo = {\n  backgroundColor: 'blue',\n  borderWidth: '1px',\n  width: '100%',\n  height: '70%',\n  justifyContent: 'center',\n  alignSelf: 'center',\n  alignItems: 'center',\n  marginTop: '30px',\n  display: 'flex'\n};\nconst gridList = {\n  flexWrap: 'nowrap',\n  // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  transform: 'translateZ(0)'\n};\nconst root = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LibraryPage\");","map":{"version":3,"sources":["/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/pages/library.tsx"],"names":["React","useEffect","useState","get_library","Container","Row","Col","GridList","GridListTile","createStyles","makeStyles","Video","VideoPlayer","Suggestion","Search","GridListTileBar","Button","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","backgroundColor","gridList","height","transform","gridListTile","borderColor","borderWidth","borderStyle","LibraryPage","initial","videos","setVideos","videoToPlay","setVideoToPlay","title","id","displaySearch","setDisplaySearch","searchedObj","setSearchedObj","n","console","log","classes","then","response","data","catch","e","startPlay","v","startSearch","stopSearch","controlButtons","containerStyle","boxStyle","containers","videosContainer","map","embededVideoContainer","embededVideo","justifyContent","marginTop","width","paddingTop","flex","flexDirection","alignSelf","alignItems","overflow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AAEA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAASC,SAAT,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,iBAArC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAAgBC,YAAhB,EAA8BC,UAA9B,QAAgD,0BAAhD;AACA,SAAQC,KAAR,QAAoB,qBAApB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAGA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,IAC3BX,YAAY,CAAC;AACXY,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,eAAe,EAAE;AAHb,GADK;AAMXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,OADA;AAERF,IAAAA,eAAe,EAAE,OAFT;AAGRG,IAAAA,SAAS,EAAE;AAHH,GANC;AAWXC,EAAAA,YAAY,EAAE;AACZJ,IAAAA,eAAe,EAAE,QADL;AAEZK,IAAAA,WAAW,EAAE,OAFD;AAGZC,IAAAA,WAAW,EAAE,KAHD;AAIZC,IAAAA,WAAW,EAAE;AAJD;AAXH,CAAD,CADc,CAA5B;AA0BA,OAAO,MAAMC,WAAoD,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG;AAAZ,CAAD,KAAqB;AAAA;;AAEvF,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAe,EAAf,CAApC;AAEA,QAAM,CAACkC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAQ;AAACoC,IAAAA,KAAK,EAAC,EAAP;AAAWC,IAAAA,EAAE,EAAC;AAAd,GAAR,CAA9C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCvC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACwC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAY;AAACoC,IAAAA,KAAK,EAAC,EAAP;AAAWM,IAAAA,CAAC,EAAC;AAAb,GAAZ,CAA9C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEA,QAAMK,OAAO,GAAG5B,SAAS,EAAzB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,GACV6C,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAf,MAAAA,SAAS,CAACe,IAAI,CAAC,MAAD,CAAL,CAAT;AACD,KAJD,EAKCC,KALD,CAKQC,CAAD,IAAO;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACD,KAPD;AAQD,GATQ,EASP,EATO,CAAT;;AAWA,WAASC,SAAT,CAAmBC,CAAnB,EAA4B;AAC1BjB,IAAAA,cAAc,CAACiB,CAAD,CAAd;AACD;;AACD,WAASC,WAAT,GAAsB;AACpBd,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AACD,WAASe,UAAT,GAAqB;AACnBf,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;;AAED,WAASgB,cAAT,GAAyB;AACvB,QAAG,CAACjB,aAAJ,EACC;AAAEK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,0BACC,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR,CAGE;AAHF;AAIE,QAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAJb;AAKE,QAAA,OAAO,EAAGS,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AASC,KAZJ,MAcE,oBACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR,CAGE;AAHF;AAIE,MAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAJb;AAKE,MAAA,OAAO,EAAGC,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUH;;AAED,sBAAO;AAAA,2BACP;AAAK,MAAA,KAAK,EAAEE,cAAZ;AAAA,6BACE;AAAK,QAAA,KAAK,EAAEC,QAAZ;AAAA,+BACE,QAAC,SAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAEC,UAAZ;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAEC,eAAZ;AAA6B,cAAA,EAAE,EAAE,CAAjC;AAAoC,cAAA,EAAE,EAAE,CAAxC;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGJ,cAAc,EAFjB,eAGE,QAAC,QAAD;AAAU,gBAAA,UAAU,EAAE,GAAtB;AAA2B,gBAAA,SAAS,EAAEV,OAAO,CAACtB,QAA9C;AAAwD,gBAAA,IAAI,EAAE,CAA9D;AAAA,0BACGS,MAAM,CAAC4B,GAAP,CAAYR,CAAD,iBACV,QAAC,YAAD;AAAc,kBAAA,SAAS,EAAEP,OAAO,CAACnB,YAAjC;AAA0D,kBAAA,IAAI,EAAE,CAAhE;AAAA,0CACE,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAE0B,CAAC,CAAChB,KAAhB;AAAuB,oBAAA,EAAE,EAAEgB,CAAC,CAACf;AAA7B;AAAA;AAAA;AAAA;AAAA,0BADF,eAEI,QAAC,eAAD;AACA,oBAAA,KAAK,eACH,QAAC,MAAD;AACE,sBAAA,OAAO,EAAC,WADV;AAEE,sBAAA,KAAK,EAAC,SAFR,CAGE;AAHF;AAIE,sBAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,8BAJb;AAKE,sBAAA,OAAO,EAAG,MAAIc,SAAS,CAACC,CAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAYA,oBAAA,UAAU,eACR,QAAC,UAAD;AAAY,oCAAa,aAAzB;AAAA,6CACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA,mBAAoDA,CAAC,CAACf,EAAtD;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA8BE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAEwB,qBAAZ;AAAmC,cAAA,EAAE,EAAE,EAAvC;AAA2C,cAAA,EAAE,EAAE,CAA/C;AAAA,wBACG,CAACvB,aAAD,gBACC;AAAK,gBAAA,KAAK,EAAEwB,YAAZ;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,KAAK,EAAE5B,WAAW,CAACE,KAAhC;AAAuC,kBAAA,EAAE,EAAEF,WAAW,CAACG;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADD,gBAKD;AAAA,wCAEE,QAAC,MAAD;AAAQ,kBAAA,cAAc,EAAEI;AAAxB;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,oBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADO,mBAAP;AAoDD,CA/GM;;GAAMX,W;UASKb,S;;;KATLa,W;AAmHb,MAAM0B,cAA8B,GAAG;AACrCpC,EAAAA,OAAO,EAAE,MAD4B;AAErC2C,EAAAA,cAAc,EAAE;AAFqB,CAAvC;AAKA,MAAMN,QAAwB,GAAG;AAC/BM,EAAAA,cAAc,EAAE,OADe;AAE/BC,EAAAA,SAAS,EAAE,MAFoB;AAG/BC,EAAAA,KAAK,EAAE,KAHwB;AAI/BzC,EAAAA,MAAM,EAAE,OAJuB;AAK/B0C,EAAAA,UAAU,EAAE,MALmB;AAM/BvC,EAAAA,WAAW,EAAE,OANkB;AAO/BC,EAAAA,WAAW,EAAE,KAPkB;AAQ/BC,EAAAA,WAAW,EAAE;AARkB,CAAjC;AAUA,MAAM6B,UAA0B,GAAG;AACjC;AACAS,EAAAA,IAAI,EAAE,YAF2B;AAGjC7C,EAAAA,eAAe,EAAE;AAHgB,CAAnC;AAMA,MAAMqC,eAA+B,GAAG,CACtC;AADsC,CAAxC;AAIA,MAAME,qBAAqC,GAAG;AAC5CvC,EAAAA,eAAe,EAAE,KAD2B;AAE5C;AACA;AACAF,EAAAA,OAAO,EAAE,MAJmC;AAK5CgD,EAAAA,aAAa,EAAE;AAL6B,CAA9C;AAOA,MAAMN,YAA4B,GAAG;AACnCxC,EAAAA,eAAe,EAAE,MADkB;AAEnCM,EAAAA,WAAW,EAAE,KAFsB;AAGnCqC,EAAAA,KAAK,EAAE,MAH4B;AAInCzC,EAAAA,MAAM,EAAE,KAJ2B;AAKnCuC,EAAAA,cAAc,EAAE,QALmB;AAMnCM,EAAAA,SAAS,EAAE,QANwB;AAOnCC,EAAAA,UAAU,EAAE,QAPuB;AAQnCN,EAAAA,SAAS,EAAE,MARwB;AASnC5C,EAAAA,OAAO,EAAE;AAT0B,CAArC;AAYA,MAAMG,QAAuB,GAAE;AAC7BF,EAAAA,QAAQ,EAAE,QADmB;AAE7B;AACAI,EAAAA,SAAS,EAAE;AAHkB,CAA/B;AAKA,MAAMN,IAAoB,GAAC;AACzBC,EAAAA,OAAO,EAAE,MADgB;AAEzBC,EAAAA,QAAQ,EAAE,MAFe;AAGzB0C,EAAAA,cAAc,EAAE,cAHS;AAIzBQ,EAAAA,QAAQ,EAAE;AAJe,CAA3B","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport CSS from 'csstype';\nimport {get_library} from '../services/http-requests'\nimport { Container , Row, Col } from 'react-bootstrap';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport {Video} from '../components/video'\nimport {VideoPlayer} from '../components/videoplayer'\nimport {Suggestion} from '../components/suggestion'\nimport {Search} from '../components/search'\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport type { SearchObj} from '../types'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      backgroundColor: 'red',\n    },\n    gridList: {\n      height: '680px',\n      backgroundColor: 'beige',\n      transform: 'translateZ(0)',\n    },\n    gridListTile: {\n      backgroundColor: 'bisque',\n      borderColor: 'black',\n      borderWidth: '2px',\n      borderStyle: 'solid'\n    },\n  }),\n);\n\nexport type Video = {\n  title: string,\n  id: string,\n}\n\nexport const LibraryPage: FunctionComponent<{ initial?: string }> = ({ initial = \"\" })=> {\n\n  const [videos, setVideos] = useState<Array<Video>>([]);\n\n  const [videoToPlay, setVideoToPlay] = useState<Video>({title:\"\", id:\"\"})\n  const [displaySearch, setDisplaySearch] = useState(false)\n  const [searchedObj, setSearchedObj] = useState<SearchObj>({title:\"\", n:0})\n  console.log(searchedObj);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    get_library()\n    .then(response => {\n      let data = response.data;\n      setVideos(data['data'])\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n  },[]);\n\n  function startPlay(v :Video){\n    setVideoToPlay(v)\n  }\n  function startSearch(){\n    setDisplaySearch(true)\n  }\n  function stopSearch(){\n    setDisplaySearch(false)\n  }\n\n  function controlButtons(){\n    if(!displaySearch)\n     { console.log(\"bbbbbbbbb\");\n\n       return (\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          // className={classes.button}\n          startIcon={<InfoIcon />}\n          onClick= {startSearch}\n          >Add\n        </Button>\n      )}\n    else\n      return (\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          // className={classes.button}\n          startIcon={<InfoIcon />}\n          onClick= {stopSearch}\n        >Stop searching\n        </Button>\n      )\n  }\n\n  return <>\n  <div style={containerStyle}>\n    <div style={boxStyle}>\n      <Container>\n        <Row style={containers}>\n          <Col style={videosContainer} xs={6} md={4}>\n            <h2>Your library</h2>\n            {controlButtons()}\n            <GridList cellHeight={140} className={classes.gridList} cols={1}>\n              {videos.map((v) => (\n                <GridListTile className={classes.gridListTile} key={v.id} cols={1}>\n                  <Video title={v.title} id={v.id} />\n                    <GridListTileBar\n                    title={\n                      <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        // className={classes.button}\n                        startIcon={<InfoIcon />}\n                        onClick= {()=>startPlay(v)}\n                      >\n                        Play\n                      </Button>\n                    }\n                    actionIcon={\n                      <IconButton aria-label={`info about `} >\n                        <InfoIcon />\n                      </IconButton>\n                    }\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </Col>\n          <Col style={embededVideoContainer} xs={12} md={8}>\n            {!displaySearch?\n              <div style={embededVideo}>\n                <VideoPlayer title={videoToPlay.title} id={videoToPlay.id}/>\n              </div>\n            :\n            <div>\n\n              <Search setSearchedObj={setSearchedObj} />\n              <Suggestion/>\n            </div>\n            }\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  </div>\n  </>\n}\n\n\n\nconst containerStyle: CSS.Properties = {\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nconst boxStyle: CSS.Properties = {\n  justifyContent: 'start',\n  marginTop: '50px',\n  width: '80%',\n  height: '800px',\n  paddingTop: '60px',\n  borderColor: 'black',\n  borderWidth: '2px',\n  borderStyle: 'solid'\n};\nconst containers: CSS.Properties = {\n  // height: '690px',\n  flex: 'flex-start',\n  backgroundColor: 'beige'\n\n};\nconst videosContainer: CSS.Properties = {\n  // backgroundColor: 'blue',\n\n};\nconst embededVideoContainer: CSS.Properties = {\n  backgroundColor: 'red',\n  // justifyContent: 'center',\n  // alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst embededVideo: CSS.Properties = {\n  backgroundColor: 'blue',\n  borderWidth: '1px',\n  width: '100%',\n  height: '70%',\n  justifyContent: 'center',\n  alignSelf: 'center',\n  alignItems: 'center',\n  marginTop: '30px',\n  display: 'flex'\n\n};\nconst gridList:CSS.Properties ={\n  flexWrap: 'nowrap',\n  // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n  transform: 'translateZ(0)',\n}\nconst root: CSS.Properties={\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-around',\n  overflow: 'hidden',\n}\n"]},"metadata":{},"sourceType":"module"}