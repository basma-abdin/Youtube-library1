{"ast":null,"code":"var _jsxFileName = \"/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/components/suggestion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { fetch_suggestions } from '../services/http-requests';\nimport { Search } from '../components/search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: 'nowrap' // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\nexport const Suggestion = () => {\n  _s();\n\n  const classes = useStyles();\n  const [searchedObj, setSearchedObj] = useState({\n    title: \"\",\n    n: 0\n  });\n  const [videos, setVideos] = useState([]);\n\n  function startSearch(title, n) {\n    console.log(\"from start search\");\n    get_suggestions(title, n);\n  }\n\n  function get_suggestions(title, n) {\n    fetch_suggestions(title, n).then(response => {\n      let data = response.data;\n      console.log(data.items);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        setSearchedObj: setSearchedObj,\n        startSearch: startSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(Suggestion, \"hejpNRCX9uNBxwMSjS4dSMMBAYk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Suggestion;\nconst containerStyle = {// display: 'flex',\n  // justifyContent: 'center',\n};\nconst boxStyle = {\n  backgroundColor: 'bisque'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Suggestion\");","map":{"version":3,"sources":["/home/basma/Desktop/TEST_APPS/Easyvista/Frontend/youtube-library/src/components/suggestion.tsx"],"names":["React","useState","makeStyles","createStyles","fetch_suggestions","Search","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","title","color","primary","light","titleBar","Suggestion","classes","searchedObj","setSearchedObj","n","videos","setVideos","startSearch","console","log","get_suggestions","then","response","data","items","catch","e","containerStyle","boxStyle"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AAEA,SAAQC,iBAAR,QAAgC,2BAAhC;AACA,SAAQC,MAAR,QAAqB,sBAArB;;;AASA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IAC7BJ,YAAY,CAAC;AACXK,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,GADK;AAQXC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,QAAQ,EAAE,QADF,CAER;;AAFQ,GARC;AAaXQ,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEZ,KAAK,CAACO,OAAN,CAAcM,OAAd,CAAsBC;AADxB,GAbI;AAgBXC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,UAAU,EACR;AAFM;AAhBC,CAAD,CADgB,CAA5B;AAyBA,OAAO,MAAMQ,UAA6B,GAAE,MAAK;AAAA;;AAC/C,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAY;AAACiB,IAAAA,KAAK,EAAC,EAAP;AAAWS,IAAAA,CAAC,EAAC;AAAb,GAAZ,CAA9C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAa,EAAb,CAApC;;AAEA,WAAS6B,WAAT,CAAqBZ,KAArB,EAAkCS,CAAlC,EAA4C;AAC1CI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAC,IAAAA,eAAe,CAACf,KAAD,EAAOS,CAAP,CAAf;AACD;;AAED,WAASM,eAAT,CAAyBf,KAAzB,EAAsCS,CAAtC,EAA+C;AAC7CvB,IAAAA,iBAAiB,CAACc,KAAD,EAAOS,CAAP,CAAjB,CACCO,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,KAAjB;AAED,KALD,EAMCC,KAND,CAMQC,CAAD,IAAO;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACD,KARD;AASD;;AAED,sBAAO;AAAA,2BACP;AAAK,MAAA,KAAK,EAAEC,cAAZ;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,cAAc,EAAEd,cAAxB;AAAwC,QAAA,WAAW,EAAEI;AAArD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAEN,OAAO,CAAChB;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADO,mBAAP;AA0BD,CAhDM;;GAAMe,U;UACKjB,S;;;KADLiB,U;AAoDb,MAAMiB,cAA8B,GAAG,CACrC;AACA;AAFqC,CAAvC;AAKA,MAAMC,QAAwB,GAAG;AAC/B5B,EAAAA,eAAe,EAAE;AADc,CAAjC","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport CSS from 'csstype';\nimport {fetch_suggestions} from '../services/http-requests'\nimport {Search} from '../components/search'\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport type { SearchObj} from '../types'\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}),\n);\n\n\nexport const Suggestion: FunctionComponent= ()=> {\n  const classes = useStyles();\n  const [searchedObj, setSearchedObj] = useState<SearchObj>({title:\"\", n:0})\n  const [videos, setVideos] = useState<Array<any>>([])\n\n  function startSearch(title:string,n:number) {\n    console.log(\"from start search\");\n    get_suggestions(title,n)\n  }\n\n  function get_suggestions(title:string,n:number){\n    fetch_suggestions(title,n)\n    .then(response => {\n      let data = response.data;\n      console.log(data.items);\n\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n  }\n\n  return <>\n  <div style={containerStyle}>\n  <Search setSearchedObj={setSearchedObj} startSearch={startSearch} />\n  <div className={classes.root}>\n      {/* <GridList className={classes.gridList} cols={2.5}>\n        {videos.map((v) => (\n          <GridListTile key={tile.img}>\n            <img src={v.snippet.thumbnails[0].url} alt={v.snippet.title} />\n            <GridListTileBar\n              title={v.snippet.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${v.snippet.title.title}`}>\n                  <StarBorderIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList> */}\n    </div>\n  </div>\n  </>\n}\n\n\n\nconst containerStyle: CSS.Properties = {\n  // display: 'flex',\n  // justifyContent: 'center',\n};\n\nconst boxStyle: CSS.Properties = {\n  backgroundColor: 'bisque'\n};"]},"metadata":{},"sourceType":"module"}